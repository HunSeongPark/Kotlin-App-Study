// Generated by view binder compiler. Do not edit!
package hunseong.com.service.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import hunseong.com.service.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addFunctionIpc;

  @NonNull
  public final Button bindBinderService;

  @NonNull
  public final Button bindIpcService;

  @NonNull
  public final Button showToastBinder;

  @NonNull
  public final Button showToastIpc;

  @NonNull
  public final Button startForegroundService;

  @NonNull
  public final Button startService;

  @NonNull
  public final Button stopForegroundService;

  @NonNull
  public final Button stopService;

  @NonNull
  public final Button unbindBinderService;

  @NonNull
  public final Button unbindIpcService;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button addFunctionIpc,
      @NonNull Button bindBinderService, @NonNull Button bindIpcService,
      @NonNull Button showToastBinder, @NonNull Button showToastIpc,
      @NonNull Button startForegroundService, @NonNull Button startService,
      @NonNull Button stopForegroundService, @NonNull Button stopService,
      @NonNull Button unbindBinderService, @NonNull Button unbindIpcService) {
    this.rootView = rootView;
    this.addFunctionIpc = addFunctionIpc;
    this.bindBinderService = bindBinderService;
    this.bindIpcService = bindIpcService;
    this.showToastBinder = showToastBinder;
    this.showToastIpc = showToastIpc;
    this.startForegroundService = startForegroundService;
    this.startService = startService;
    this.stopForegroundService = stopForegroundService;
    this.stopService = stopService;
    this.unbindBinderService = unbindBinderService;
    this.unbindIpcService = unbindIpcService;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_function_ipc;
      Button addFunctionIpc = rootView.findViewById(id);
      if (addFunctionIpc == null) {
        break missingId;
      }

      id = R.id.bind_binder_service;
      Button bindBinderService = rootView.findViewById(id);
      if (bindBinderService == null) {
        break missingId;
      }

      id = R.id.bind_ipc_service;
      Button bindIpcService = rootView.findViewById(id);
      if (bindIpcService == null) {
        break missingId;
      }

      id = R.id.show_toast_binder;
      Button showToastBinder = rootView.findViewById(id);
      if (showToastBinder == null) {
        break missingId;
      }

      id = R.id.show_toast_ipc;
      Button showToastIpc = rootView.findViewById(id);
      if (showToastIpc == null) {
        break missingId;
      }

      id = R.id.start_foreground_service;
      Button startForegroundService = rootView.findViewById(id);
      if (startForegroundService == null) {
        break missingId;
      }

      id = R.id.start_service;
      Button startService = rootView.findViewById(id);
      if (startService == null) {
        break missingId;
      }

      id = R.id.stop_foreground_service;
      Button stopForegroundService = rootView.findViewById(id);
      if (stopForegroundService == null) {
        break missingId;
      }

      id = R.id.stop_service;
      Button stopService = rootView.findViewById(id);
      if (stopService == null) {
        break missingId;
      }

      id = R.id.unbind_binder_service;
      Button unbindBinderService = rootView.findViewById(id);
      if (unbindBinderService == null) {
        break missingId;
      }

      id = R.id.unbind_ipc_service;
      Button unbindIpcService = rootView.findViewById(id);
      if (unbindIpcService == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, addFunctionIpc, bindBinderService,
          bindIpcService, showToastBinder, showToastIpc, startForegroundService, startService,
          stopForegroundService, stopService, unbindBinderService, unbindIpcService);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
